# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KvwinSGxOxvLMqk3-97XabBziPF3LIaU
"""

import streamlit as st
import tensorflow as tf
from PIL import Image, ImageOps
import numpy as np
import cv2
import io


@st.cache_resource
def load_model():
    model = tf.keras.models.load_model('best_model.h5')  # Path adjusted for Colab
    return model

model = load_model()

st.write("""
# Eye Disease Detection System
""")

file = st.file_uploader("Choose retina image to identify the condition", type=["jpg", "png", "jpeg"])


def import_and_predict(image_data, model):
    try:
        size = (64, 64)  # Ensure the input size matches the model's expected input size
        image_stream = io.BytesIO(image_data.read())
        image = Image.open(image_stream)
        image = image.convert("RGB")
        image = ImageOps.fit(image, size, Image.ANTIALIAS)
        img = np.asarray(image)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        img_reshape = img[np.newaxis, ...]
        print("Input image shape:", img.shape)  # Debug statement
        prediction = model.predict(img_reshape)
        print("Model prediction:", prediction)  # Debug statement
        return prediction
    except Exception as e:
        st.error(f"Error processing image: {e}")
        return None



if file is None:
    st.text("Please upload an image file")
else:
    image = Image.open(file)
    st.image(image, use_column_width=True)
    prediction = import_and_predict(image, model)
    class_names = ['cataract', 'diabetic retinopathy', 'glaucoma', 'normal']  # Adjust class names as needed
    string = "OUTPUT : " + class_names[np.argmax(prediction)]
    st.success(string)
