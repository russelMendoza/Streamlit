# -*- coding: utf-8 -*-
"""FinalProj_Castillo_Mendoza.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13dbjhBKxhG9UBmYVRHBJ7BmarILTLqup
"""



import streamlit as st
from PIL import Image, ImageOps
import cv2

def load_model():
    model = tf.keras.models.load_model('/content/drive/MyDrive/Colab Notebooks/finalproj.h5')  # Adjust the path if necessary
    return model

model = load_model()

st.write("""
# Eye Desease Detection System
""")

file = st.file_uploader("Choose retina image to identify the condition", type=["jpg", "png"])

def import_and_predict(image_data, model):
    size = (64, 64)  # Ensure the input size matches the model's expected input size
    image = ImageOps.fit(image_data, size, Image.ANTIALIAS)
    img = np.asarray(image)
    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # Ensure image is in RGB format
    img_reshape = img[np.newaxis, ...]  # Reshape image to match model's input shape
    prediction = model.predict(img_reshape)
    return prediction

if file is None:
    st.text("Please upload an image file")
else:
    image = Image.open(file)
    st.image(image, use_column_width=True)
    prediction = import_and_predict(image, model)
    class_names = ['cataract', 'diabetic retinopathy', 'glaucoma', 'normal']  # Adjust class names as needed
    string = "OUTPUT : " + class_names[np.argmax(prediction)]
    st.success(string)
